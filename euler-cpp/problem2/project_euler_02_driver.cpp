/******************************************************************************
	Project Euler - Problem 2

	From:
	ProjectEuler.net - https://projecteuler.net/problem=2
	"Each new term in the Fibonacci sequence is generated by adding the
	previous two terms. By starting with 1 and 2, the first 10 terms will be:
	1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
	By considering the terms in the Fibonacci sequence whose values do not
	exceed four million, find the sum of the even-valued terms."

	Done on the laptop downstairs and now here.
	Answer: 4613732
	Verified; correct.

	still displays 5702887 even though it exceeds 4 mil.
******************************************************************************/
#include <iostream>
#include <stdio.h>

int main(int argc, char* argv[])
{
	long long llnum1 = 0;
	long long llnum2 = 1;
	long long llsum = 0;
	long long llevensum = 0;

	bool b4mil = false;

	while (!b4mil)
	{
		llsum = llnum1 + llnum2;
		llnum1 = llnum2;
		llnum2 = llsum;

		std::cout << llsum << std::endl;

		if (llsum % 2 == 0)
			llevensum += llsum;

		if (llsum >= 4000000)
			b4mil = true;
	}

    std::cout << "Whole Sum: " << llsum << std::endl;
	std::cout << "Sum of Evens: " << llevensum << std::endl;

	getchar();
	return 0;
}
